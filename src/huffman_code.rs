// src/huffman_code.rs

use huffman_compress::{Book, CodeBuilder, Tree};
use std::sync::OnceLock;

// Define frequencies as a static slice
static FREQUENCIES: &[(u32, u32)] = &[
    (0, 225883932),
    (1, 134956126),
    (2, 89041269),
    (3, 69386238),
    (4, 57040790),
    (5, 44974559),
    (6, 36547155),
    (7, 31624920),
    (8, 28432772),
    (9, 26540493),
    (10, 24484873),
    (11, 23058034),
    (12, 23535272),
    (13, 20482457),
    (14, 20450172),
    (15, 18316057),
    (16, 17214833),
    (17, 16964761),
    (18, 16530028),
    (19, 15369510),
    (20, 14178440),
    (21, 14275714),
    (22, 13353306),
    (23, 12829602),
    (24, 13102592),
    (25, 11932647),
    (26, 10608657),
    (27, 10142459),
    (28, 8294594),
    (29, 7337490),
    (30, 6337744),
    (31, 5380717),
    (32, 4560556),
    (33, 3913313),
    (34, 3038767),
    (35, 2480514),
    (36, 1951026),
    (37, 1521451),
    (38, 1183252),
    (39, 938708),
    (40, 673339),
    (41, 513153),
    (42, 377299),
    (43, 276996),
    (44, 199682),
    (45, 144602),
    (46, 103313),
    (47, 73046),
    (48, 52339),
    (49, 36779),
    (50, 26341),
    (51, 18719),
    (52, 13225),
    (53, 9392),
    (54, 6945),
    (55, 4893),
    (56, 3698),
    (57, 2763),
    (58, 2114),
    (59, 1631),
    (60, 1380),
    (61, 1090),
    (62, 887),
    (63, 715),
    (64, 590),
    (65, 549),
    (66, 477),
    (67, 388),
    (68, 351),
    (69, 319),
    (70, 262),
    (71, 236),
    (72, 200),
    (73, 210),
    (74, 153),
    (75, 117),
    (76, 121),
    (77, 121),
    (78, 115),
    (79, 95),
    (80, 75),
    (81, 67),
    (82, 55),
    (83, 50),
    (84, 55),
    (85, 33),
    (86, 33),
    (87, 30),
    (88, 32),
    (89, 28),
    (90, 29),
    (91, 27),
    (92, 21),
    (93, 15),
    (94, 9),
    (95, 10),
    (96, 12),
    (97, 12),
    (98, 8),
    (99, 7),
    (100, 2),
    (101, 4),
    (102, 5),
    (103, 5),
    (104, 1),
    (105, 5),
    (106, 1),
    (107, 1),
    (108, 1),
    (109, 1),
    (110, 2),
    (111, 1),
    (112, 1),
    (113, 1),
    (114, 1),
    (115, 1),
    (116, 1),
    (117, 1),
    (118, 1),
    (119, 1),
    (120, 1),
    (121, 1),
    (122, 1),
    (123, 1),
    (124, 1),
    (125, 1),
    (126, 1),
    (127, 1),
    (128, 1),
    (129, 1),
    (130, 1),
    (131, 1),
    (132, 1),
    (133, 1),
    (134, 1),
    (135, 1),
    (136, 1),
    (137, 1),
    (138, 1),
    (139, 1),
    (140, 1),
    (141, 1),
    (142, 1),
    (143, 1),
    (144, 1),
    (145, 1),
    (146, 1),
    (147, 1),
    (148, 1),
    (149, 1),
    (150, 1),
    (151, 1),
    (152, 1),
    (153, 1),
    (154, 1),
    (155, 1),
    (156, 1),
    (157, 1),
    (158, 1),
    (159, 1),
    (160, 1),
    (161, 1),
    (162, 1),
    (163, 1),
    (164, 1),
    (165, 1),
    (166, 1),
    (167, 1),
    (168, 1),
    (169, 1),
    (170, 1),
    (171, 1),
    (172, 1),
    (173, 1),
    (174, 1),
    (175, 1),
    (176, 1),
    (177, 1),
    (178, 1),
    (179, 1),
    (180, 1),
    (181, 1),
    (182, 1),
    (183, 1),
    (184, 1),
    (185, 1),
    (186, 1),
    (187, 1),
    (188, 1),
    (189, 1),
    (190, 1),
    (191, 1),
    (192, 1),
    (193, 1),
    (194, 1),
    (195, 1),
    (196, 1),
    (197, 1),
    (198, 1),
    (199, 1),
    (200, 1),
    (201, 1),
    (202, 1),
    (203, 1),
    (204, 1),
    (205, 1),
    (206, 1),
    (207, 1),
    (208, 1),
    (209, 1),
    (210, 1),
    (211, 1),
    (212, 1),
    (213, 1),
    (214, 1),
    (215, 1),
    (216, 1),
    (217, 1),
    (218, 1),
    (219, 1),
    (220, 1),
    (221, 1),
    (222, 1),
    (223, 1),
    (224, 1),
    (225, 1),
    (226, 1),
    (227, 1),
    (228, 1),
    (229, 1),
    (230, 1),
    (231, 1),
    (232, 1),
    (233, 1),
    (234, 1),
    (235, 1),
    (236, 1),
    (237, 1),
    (238, 1),
    (239, 1),
    (240, 1),
    (241, 1),
    (242, 1),
    (243, 1),
    (244, 1),
    (245, 1),
    (246, 1),
    (247, 1),
    (248, 1),
    (249, 1),
    (250, 1),
    (251, 1),
    (252, 1),
    (253, 1),
    (254, 1),
    (255, 1),
];

// Initialize the static Huffman Codebook and Tree using OnceLock
static HUFFMAN_CODE: OnceLock<(Book<u32>, Tree<u32>)> = OnceLock::new();

/// Retrieves the static Huffman `Book` and `Tree`.
///
/// The Huffman code is initialized on the first call and reused thereafter.
pub fn get_huffman_code() -> &'static (Book<u32>, Tree<u32>) {
    HUFFMAN_CODE.get_or_init(|| build_huffman_code())
}

/// Builds the Huffman `Book` and `Tree` using the defined frequency table.
fn build_huffman_code() -> (Book<u32>, Tree<u32>) {
    let builder = CodeBuilder::from_iter(FREQUENCIES.iter().cloned());
    builder.finish()
}
